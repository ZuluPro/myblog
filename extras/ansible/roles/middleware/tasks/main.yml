---
- name: Check SSH public key
  local_action: command test -e {{ ssh_public_key_file }}
  register: ssh_public_key_test
  ignore_errors: yes

# user
- name: Create user {{ myblog_user }}
  user: name="{{ myblog_user }}" shell=/bin/bash home="{{Â myblog_home }}"

- name: Add SSH public key to {{ myblog_user }}
  authorized_key: user={{ myblog_user }}
                  key="{{ lookup('file', ssh_public_key_file) }}"
  when: ssh_public_key_test.rc == 0 

# myblog
- name: Install requirements
  apt: name={{ item }} state=present
  with_items:
    - python
    - python-dev
    - python-setuptools
    - build-essential
    - libmysqlclient-dev

- name: Install pip
  easy_install: name=pip

- name: Upgrade pip
  pip: name=pip

- name: Install virtualenv
  pip: name=virtualenv

- name: Install Python MySQL and Redis clients
  pip: name={{ item }} virtualenv="{{ myblog_venv }}"
  remote_user: "{{ myblog_user }}"
  with_items:
    - MySQL-python
    - django-redis

- name: Git pull blog
  git: repo=https://github.com/ZuluPro/myblog.git
       dest=/tmp/src/myblog version={{ myblog_version }}
  remote_user: "{{ myblog_user }}"
  register: git_pull_myblog

- name: Install myblog requirements
  pip: requirements=/tmp/src/myblog/requirements.txt
       virtualenv="{{ myblog_venv }}"
  remote_user: "{{ myblog_user }}"

- name: Install myblog
  shell: "{{ myblog_venv }}/bin/python setup.py install"
  args:
     chdir: /tmp/src/myblog
  remote_user: "{{ myblog_user }}"
  when: git_pull_myblog.changed
  notify: restart uwsgi

- name: Get package directory
  shell: "{{ myblog_venv }}/bin/myblog settings | awk '/BASE_DIR/ {print $3}'"
  remote_user: "{{ myblog_user }}"
  register: myblog_basedir
  changed_when: False
  environment:
    PATH: "{{ myblog_venv }}/bin/:{{ ansible_env.PATH }}"

- name: Setup myblog configuration
  template: src=myblog.cfg.j2 dest=/etc/myblog.cfg mode=0644 owner=root

- name: Create static root directory
  file: dest="{{ static_root }}" state=directory owner={{ myblog_user }} group={{ myblog_user }}
        mode=0740

- name: Collect static files
  command: "{{ myblog_venv }}/bin/myblog collectstatic --noinput"
  remote_user: "{{ myblog_user }}"
  register: collectstatic
  run_once: true
  changed_when: "not '0 static files copied to' in collectstatic.stdout"

- name: Deploy database 
  command: "{{ myblog_venv }}/bin/myblog migrate --noinput"
  remote_user: "{{ myblog_user }}"
  register: migration
  changed_when: "not 'No migrations to apply.' in migration.stdout"

# uWSGI
- name: Install uWSGI
  apt: name={{ item }} state=latest
  with_items:
    - uwsgi
    - uwsgi-plugin-python

- name: Setup myblog uWSGI configuration
  template: src=uwsgi.ini.j2 dest=/etc/uwsgi/apps-available/myblog.ini
  notify: restart uwsgi

- name: Enable myblog uWSGI configuration
  file: src=/etc/uwsgi/apps-available/myblog.ini dest=/etc/uwsgi/apps-enabled/myblog.ini state=link
