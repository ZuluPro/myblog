---
- name: Install Nginx
  apt: name=nginx state=latest

# SSL
- name: Check SSL key and chain are installed
  stat: path={{ dhparam_pem_addr }}
  register: dhparam_pem_stat

- name: Create Diffie-Hellman pem file
  command: openssl dhparam -out {{ dhparam_pem_addr }} 2048
  when: not dhparam_pem_stat.stat.exists
  notify: restart nginx

- name: Put SSL key
  copy: src={{ ssl_key }} dest=/etc/ssl/private/myblog.key 
  when: ssl_key and ssl_cert
  
- name: Put SSL cert
  copy: src={{ ssl_cert }} dest=/etc/ssl/private/myblog.key
  when: ssl_key and ssl_cert
  notify: reload nginx

- name: Check SSL key and chain are installed
  stat: path={{ ssl_key_addr }}
  register: ssl_key_stat

- name: Create auto-signed SSL key and cert
  command: openssl req -new -x509 -subj "/C=FR/ST=IDF/L=Paris/O=IT/CN={{ server_url }}" -nodes -days 3650 -newkey rsa:2048 -keyout {{ ssl_key_addr }} -out {{ ssl_cert_addr }}
  when: not ssl_key_stat.stat.exists
  notify: reload nginx

# Sites
- name: Disable default site
  file: path=/etc/nginx/sites-enabled/default state=absent

- name: Setup myblog Nginx configuration
  template: src=nginx-site.conf.j2 dest=/etc/nginx/sites-available/myblog.conf
  notify: reload nginx

- name: Enable myblog Nginx configuration
  file: src=/etc/nginx/sites-available/myblog.conf dest=/etc/nginx/sites-enabled/myblog.conf state=link
  notify: restart nginx

# Configuration
- name: Disable server_tokens
  lineinfile: dest=/etc/nginx/nginx.conf regexp=server_tokens
              line="        server_tokens off;" 
# Static
- name: Add robots.txt
  copy: src=robots.txt dest=/var/www/robots.txt mode=660 owner=www-data group=www-data

- name: Update static files
  command: rsync -e ssh -acogtvz --modify-window=3600 --delete-after --force --no-motd --chown=www-data:www-data root@{{ item }}:{{ static_root }} /var/www/
  with_items: (groups.get('all', []) + groups.get('middleware', []))[0]
  register: update_static
  changed_when: "update_static.stdout.count('\n') > 4"
